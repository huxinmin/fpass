{"version":3,"sources":["component/Navbar.js","common/rules.js","page/Home.js","common/encrypt.js","App.js","registerServiceWorker.js","index.js"],"names":["Wrapper","styled","Navbar","attrs","dark","fixed","GithubLink","a","href","target","Container","NavbarBrand","height","version","viewBox","width","fillRule","d","rules","Item","Form","Option","Select","Home","useForm","form","labelCol","span","wrapperCol","style","maxWidth","padding","onFinish","selected","name","salt","length","password","domain","ret","Array","apply","reduce","value","sha512","substr","split","isNaN","toUpperCase","String","fromCharCode","parseInt","toLowerCase","charCodeAt","join","encryptPassword","setFieldsValue","colon","label","required","message","map","rule","index","noStyle","dependencies","getFieldValue","placeholder","initialValue","min","max","precision","color","htmlType","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","__PLEASE_REFRESH__","catch","error","ReactDOM","render","App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2e8edbe8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container, Navbar, NavbarBrand } from 'reactstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled(Navbar).attrs({\r\n  dark: true,\r\n  fixed: 'top',\r\n})`\r\n  background: #343a40;\r\n`\r\n\r\nconst GithubLink = styled.a.attrs({\r\n  href: 'https://github.com/huxinmin/password',\r\n  target: '_blank',\r\n})`\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  width: 32px;\r\n  height: 32px;\r\n  color: #fff;\r\n\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n\r\n  svg {\r\n    fill: currentColor;\r\n  }\r\n`\r\n\r\nexport default () => (\r\n  <Wrapper>\r\n    <Container>\r\n      <NavbarBrand href=\"/\">PASSWORD</NavbarBrand>\r\n      <GithubLink>\r\n        <svg height=\"32\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"32\">\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\r\n          />\r\n        </svg>\r\n      </GithubLink>\r\n    </Container>\r\n  </Wrapper>\r\n)\r\n","export const rules = [\r\n  '自定义',\r\n  'segmentfault',\r\n  '简书',\r\n  '微信公众平台',\r\n  '优酷',\r\n  'Steam',\r\n  '腾讯QQ',\r\n  '微信',\r\n  'GitHub',\r\n  'NPM',\r\n  '知乎',\r\n  '百度',\r\n  '新浪微博',\r\n  '12306',\r\n  '豆瓣',\r\n  '拉钩',\r\n  '淘宝',\r\n  '京东',\r\n  'Coding',\r\n  '开源中国',\r\n  '码云',\r\n  '哔哩哔哩',\r\n  '饿了么',\r\n  '华为账号',\r\n  '网易',\r\n]\r\n","import { Button, Form, Input, InputNumber, Select } from 'antd'\nimport 'antd/dist/antd.css'\nimport React from 'react'\nimport { Container } from 'reactstrap'\nimport styled from 'styled-components'\nimport { encryptPassword, rules } from '../common'\n\nconst { Item } = Form\nconst { Option } = Select\n\nconst Wrapper = styled(Container)`\n  min-height: calc(100vh - 56px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 57px;\n  @media screen and (max-width: 767px) {\n    display: block;\n  }\n`\n\nconst Home = () => {\n  const [form] = Form.useForm()\n\n  const onFinish = ({ selected, name, salt, length }) => {\n    const domain = selected === 0 ? name : rules[selected]\n\n    const password = encryptPassword({\n      domain,\n      length,\n      salt,\n    })\n    form.setFieldsValue({ password })\n  }\n\n  const formStyle = {\n    maxWidth: '480px',\n    width: '100%',\n    height: '380px',\n    padding: '15px 0',\n  }\n\n  const layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 },\n  }\n\n  const tailLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 },\n  }\n\n  return (\n    <Wrapper>\n      <Form {...layout} form={form} style={formStyle} onFinish={onFinish} colon={false}>\n        <Item label=\"选择平台\" required name=\"selected\" rules={[{ required: true, message: '请选择平台' }]}>\n          <Select>\n            {rules.map((rule, index) => (\n              <Option value={index} key={index}>\n                {rule}\n              </Option>\n            ))}\n          </Select>\n        </Item>\n\n        <Item noStyle dependencies={['selected']}>\n          {({ getFieldValue }) => {\n            const selected = getFieldValue('selected')\n            if (selected === 0) {\n              return (\n                <Item label=\"平台\" required name=\"name\" rules={[{ required: true, message: '请输入要加密的账号平台' }]}>\n                  <Input placeholder=\"请输入要加密的账号平台\" />\n                </Item>\n              )\n            }\n          }}\n        </Item>\n\n        <Item\n          label=\"长度\"\n          required\n          initialValue={12}\n          name=\"length\"\n          rules={[{ required: true, message: '请输入生成密码的长度' }]}\n        >\n          <InputNumber style={{ width: '100%' }} min={6} max={20} precision={0} />\n        </Item>\n\n        <Item label=\"秘钥\" name=\"salt\" required rules={[{ required: true, message: '请输入加密的盐' }]}>\n          <Input placeholder=\"请输入加密的盐\" />\n        </Item>\n\n        <Item label=\"密码\" name=\"password\">\n          <Input placeholder=\"计算得到的密码\" />\n        </Item>\n\n        <Form.Item {...tailLayout} label={<div />}>\n          <Button color=\"secondary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </Wrapper>\n  )\n}\n\nexport default Home\n","import sha512 from 'js-sha512'\r\n\r\nexport const encryptPassword = ({ domain, salt, length }) => {\r\n  const ret = Array.apply(null, { length: 3 })\r\n    .reduce((value) => sha512(value + salt), domain)\r\n    .substr(0, length)\r\n    .split('')\r\n  ret[0] = isNaN(ret[0]) ? ret[0].toUpperCase() : String.fromCharCode(65 + parseInt(ret[0], 10))\r\n  ret[1] = isNaN(ret[1]) ? ret[1].toLowerCase() : String.fromCharCode(97 + parseInt(ret[1], 10))\r\n  ret[2] = isNaN(ret[2]) ? ret[2].charCodeAt(0) % 10 : ret[2]\r\n  return ret.join('')\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport Navbar from './component/Navbar'\r\nimport Home from './page/Home'\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <Navbar />\r\n    <BrowserRouter>\r\n      <Route path=\"/\" component={Home} />\r\n    </BrowserRouter>\r\n  </Fragment>\r\n)\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n)\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\r\n          )\r\n        })\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.')\r\n              window.__PLEASE_REFRESH__ = true\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport registerServiceWorker from './registerServiceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('app'))\r\nregisterServiceWorker()\r\n"],"sourceRoot":""}